-- buildar a imager com o nome ex-simple-build (-t)
docker image build -t ex-simple-build . 

-- ver a imagem gerada
docker image ls

-- rodar a imagem gerada na porta 80
docker container run -p 80:80 ex-simple-build

--- echo dentro da maquina do docker
docker container run ex-build-arg bash -c 'echo $S3_BUCKET'

-- buildar a imager com o nome ex-build-arg alterando a variavel(--build-arg)
docker image build  --build-arg  S3_BUCKET=myapp -t ex-build-arg . 

-- login docker
docker login --username=serrarenato

--- docker-composer up -d (fica em segundo plano)

--- subir imagem no docker hub
docker image push serrarenato/simple-build:1.0

--entrar no container UP

docker exec -it  emailworkercompose_app_1 bash 

-- redes 
	 --net none -> sem rede
	 docker network ls --> verificar redes do docker.
	 docker network inspect bridge  --> inspeciona rede bridge
	 docker container exec -it container1 ping www.google.com --> pingar de dentro do container
	 docker network create --driver bridge rede_nova --> criar uma rede nova.
	 docker network connect bridge container3 --> conectar a rede bridge no container3, desse modo essa rede é adicionada nao substituida.
	 docker container exec -it container3 ifconfig --> executar o ifconfig num container
	
	Modo Bridge default -> tem uma proteção a mais em cada container gera um IP.
	Modo Host --> pega as configurações da maquina, nao tem isolamento, mas tem mais velocidade.
	 
-------- docker compose
docker-compose down	 -- parar 
docker-compose ps -- listar
docker-compose up -d -- run in a background
docker-compose exec
docker-compose exec db psql -U postgres -f /scripts/check.sql  // executar script dentro do db
docker-compose logs -f -t


docker-compose up -d --scale worker=3  // usado para escalar containers neste caso criou 3 containers copia de worker

docker-compose logs -f -t worker //logs de um unico container





